name: 'publish'

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  release-notes:
    runs-on: ubuntu-22.04
    outputs:
      release_body: ${{ steps.release_notes.outputs.release_body }}
    steps:
      - uses: actions/checkout@v4
      - id: release_notes
        continue-on-error: true
        run: |
          if [ -f "./docs/release.txt" ]; then
            {
              echo 'release_body<<EOF'
              cat "./docs/release.txt"
              echo 'EOF'
            } >> "$GITHUB_OUTPUT"
          else
            echo "release_body=See the assets to download this version and install." >> "$GITHUB_OUTPUT"
          fi

  publish-tauri:
    needs: release-notes
    if: always()
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        continue-on-error: true
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Setup pnpm
        uses: pnpm/action-setup@v4.1.0
        with:
          version: 9

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'pnpm'

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        continue-on-error: true
        with:
          workspaces: './src-tauri -> target'

      - name: install frontend dependencies
        run: pnpm install

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__
          releaseName: 'App v__VERSION__'
          releaseBody: ${{ needs.release-notes.outputs.release_body || 'See the assets to download this version and install.' }}
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}
